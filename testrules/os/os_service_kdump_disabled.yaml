id: os_service_kdump_disabled
title: Disable KDump Kernel Crash Analyzer (kdump)
discussion: |
  Kernel core dumps may contain the full contents of system memory at the
  time of the crash. Kernel core dumps consume a considerable amount of disk
  space and may result in denial of service by exhausting the available space
  on the target file system partition. Unless the system is used for kernel
  development or testing, there is little need to run the kdump service.
check: $OS_VALUE
result:
  integer: 1
fix: $OS_VALUE
references:
  cce:
    - $OS_VALUE
  cci:
    - CCI-000366
  800-53r4:
    - CM-6(a)
    - CM-7(a)
    - CM-7(b)
  srg:
    - SRG-OS-000269-GPOS-00103
    - SRG-OS-000480-GPOS-00227
  disa_stig:
    - $OS_VALUE
  cis:
    benchmark:
      - $OS_VALUE
tags:
  - N/A
severity: medium
os_specifics:
  rhel:
    '10':
      references:
        cce:
          - CCE-88407-2
        disa_stig:
          - N/A
      check:
        - N/A
      fix: |
        [source,bash]
        ---
        # Remediation is applicable only in certain platforms
        if rpm --quiet -q kernel; then

        SYSTEMCTL_EXEC='/usr/bin/systemctl'
        if [[ $("$SYSTEMCTL_EXEC" is-system-running) != "offline" ]]; then
          "$SYSTEMCTL_EXEC" stop 'kdump.service'
        fi
        "$SYSTEMCTL_EXEC" disable 'kdump.service'
        "$SYSTEMCTL_EXEC" mask 'kdump.service'
        # Disable socket activation if we have a unit file for it
        if "$SYSTEMCTL_EXEC" -q list-unit-files kdump.socket; then
            if [[ $("$SYSTEMCTL_EXEC" is-system-running) != "offline" ]]; then
              "$SYSTEMCTL_EXEC" stop 'kdump.socket'
            fi
            "$SYSTEMCTL_EXEC" mask 'kdump.socket'
        fi
        # The service may not be running because it has been started and failed,
        # so let's reset the state so OVAL checks pass.
        # Service should be 'inactive', not 'failed' after reboot though.
        "$SYSTEMCTL_EXEC" reset-failed 'kdump.service' || true

        else
            >&2 echo 'Remediation is not applicable, nothing was done'
        fi

        ---
    '8':
      references:
        cce:
          - CCE-80878-2
        disa_stig:
          - RHEL-08-010670
      check:
        - N/A
      fix: |
        [source,bash]
        ---
        # Remediation is applicable only in certain platforms
        if rpm --quiet -q kernel; then

        SYSTEMCTL_EXEC='/usr/bin/systemctl'
        if [[ $("$SYSTEMCTL_EXEC" is-system-running) != "offline" ]]; then
          "$SYSTEMCTL_EXEC" stop 'kdump.service'
        fi
        "$SYSTEMCTL_EXEC" disable 'kdump.service'
        "$SYSTEMCTL_EXEC" mask 'kdump.service'
        # Disable socket activation if we have a unit file for it
        if "$SYSTEMCTL_EXEC" -q list-unit-files kdump.socket; then
            if [[ $("$SYSTEMCTL_EXEC" is-system-running) != "offline" ]]; then
              "$SYSTEMCTL_EXEC" stop 'kdump.socket'
            fi
            "$SYSTEMCTL_EXEC" mask 'kdump.socket'
        fi
        # The service may not be running because it has been started and failed,
        # so let's reset the state so OVAL checks pass.
        # Service should be 'inactive', not 'failed' after reboot though.
        "$SYSTEMCTL_EXEC" reset-failed 'kdump.service' || true

        else
            >&2 echo 'Remediation is not applicable, nothing was done'
        fi

        ---
    '9':
      references:
        cce:
          - CCE-84232-8
        disa_stig:
          - RHEL-09-213115
      check:
        - N/A
      fix: |
        [source,bash]
        ---
        # Remediation is applicable only in certain platforms
        if rpm --quiet -q kernel; then

        SYSTEMCTL_EXEC='/usr/bin/systemctl'
        if [[ $("$SYSTEMCTL_EXEC" is-system-running) != "offline" ]]; then
          "$SYSTEMCTL_EXEC" stop 'kdump.service'
        fi
        "$SYSTEMCTL_EXEC" disable 'kdump.service'
        "$SYSTEMCTL_EXEC" mask 'kdump.service'
        # Disable socket activation if we have a unit file for it
        if "$SYSTEMCTL_EXEC" -q list-unit-files kdump.socket; then
            if [[ $("$SYSTEMCTL_EXEC" is-system-running) != "offline" ]]; then
              "$SYSTEMCTL_EXEC" stop 'kdump.socket'
            fi
            "$SYSTEMCTL_EXEC" mask 'kdump.socket'
        fi
        # The service may not be running because it has been started and failed,
        # so let's reset the state so OVAL checks pass.
        # Service should be 'inactive', not 'failed' after reboot though.
        "$SYSTEMCTL_EXEC" reset-failed 'kdump.service' || true

        else
            >&2 echo 'Remediation is not applicable, nothing was done'
        fi

        ---
  ubuntu:
    '2004':
      references:
        cce:
          - N/A
        disa_stig:
          - UBTU-20-010413
      check:
        - N/A
      fix: |
        [source,bash]
        ---
        # Remediation is applicable only in certain platforms
        if dpkg-query --show --showformat='${db:Status-Status}
        ' 'linux-base' 2>/dev/null | grep -q ^installed; then

        SYSTEMCTL_EXEC='/usr/bin/systemctl'
        if [[ $("$SYSTEMCTL_EXEC" is-system-running) != "offline" ]]; then
          "$SYSTEMCTL_EXEC" stop 'kdump-tools.service'
        fi
        "$SYSTEMCTL_EXEC" disable 'kdump-tools.service'
        "$SYSTEMCTL_EXEC" mask 'kdump-tools.service'
        # Disable socket activation if we have a unit file for it
        if "$SYSTEMCTL_EXEC" -q list-unit-files kdump-tools.socket; then
            if [[ $("$SYSTEMCTL_EXEC" is-system-running) != "offline" ]]; then
              "$SYSTEMCTL_EXEC" stop 'kdump-tools.socket'
            fi
            "$SYSTEMCTL_EXEC" mask 'kdump-tools.socket'
        fi
        # The service may not be running because it has been started and failed,
        # so let's reset the state so OVAL checks pass.
        # Service should be 'inactive', not 'failed' after reboot though.
        "$SYSTEMCTL_EXEC" reset-failed 'kdump-tools.service' || true

        else
            >&2 echo 'Remediation is not applicable, nothing was done'
        fi

        ---
    '2204':
      references:
        cce:
          - N/A
        disa_stig:
          - UBTU-22-213015
      check:
        - N/A
      fix: |
        [source,bash]
        ---
        # Remediation is applicable only in certain platforms
        if dpkg-query --show --showformat='${db:Status-Status}
        ' 'linux-base' 2>/dev/null | grep -q ^installed; then

        SYSTEMCTL_EXEC='/usr/bin/systemctl'
        if [[ $("$SYSTEMCTL_EXEC" is-system-running) != "offline" ]]; then
          "$SYSTEMCTL_EXEC" stop 'kdump-tools.service'
        fi
        "$SYSTEMCTL_EXEC" disable 'kdump-tools.service'
        "$SYSTEMCTL_EXEC" mask 'kdump-tools.service'
        # Disable socket activation if we have a unit file for it
        if "$SYSTEMCTL_EXEC" -q list-unit-files kdump-tools.socket; then
            if [[ $("$SYSTEMCTL_EXEC" is-system-running) != "offline" ]]; then
              "$SYSTEMCTL_EXEC" stop 'kdump-tools.socket'
            fi
            "$SYSTEMCTL_EXEC" mask 'kdump-tools.socket'
        fi
        # The service may not be running because it has been started and failed,
        # so let's reset the state so OVAL checks pass.
        # Service should be 'inactive', not 'failed' after reboot though.
        "$SYSTEMCTL_EXEC" reset-failed 'kdump-tools.service' || true

        else
            >&2 echo 'Remediation is not applicable, nothing was done'
        fi

        ---
