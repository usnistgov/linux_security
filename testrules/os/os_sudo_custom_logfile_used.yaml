id: os_sudo_custom_logfile_used
title: Ensure Sudo Logfile Exists - sudo logfile
discussion: A sudo log file simplifies auditing of sudo commands.
check: $OS_VALUE
result:
  integer: 1
fix: $OS_VALUE
references:
  cce:
    - $OS_VALUE
  cci:
    - N/A
  800-53r4:
    - N/A
  srg:
    - N/A
  disa_stig:
    - $OS_VALUE
  cis:
    benchmark:
      - $OS_VALUE
tags:
  - cis_lvl1
  - cis_lvl2
  - client
  - server
severity: low
os_specifics:
  rhel:
    '10':
      references:
        cce:
          - CCE-89611-8
        disa_stig:
          - N/A
      check:
        - N/A
      fix: |
        [source,bash]
        ---
        # Remediation is applicable only in certain platforms
        if rpm --quiet -q sudo; then

        var_sudo_logfile=''


        if /usr/sbin/visudo -qcf /etc/sudoers; then
            cp /etc/sudoers /etc/sudoers.bak
            if ! grep -P '^[\s]*Defaults[\s]*\blogfile\s*=\s*(?:"?([^",\s]+)"?)\b.*$' /etc/sudoers; then
                # sudoers file doesn't define Option logfile
                echo "Defaults logfile=${var_sudo_logfile}" >> /etc/sudoers
            else
                # sudoers file defines Option logfile, remediate if appropriate value is not set
                if ! grep -P "^[\s]*Defaults.*\blogfile=${var_sudo_logfile}\b.*$" /etc/sudoers; then

                    escaped_variable=${var_sudo_logfile//$'/'/$'\/'}
                    sed -Ei "s/(^[\s]*Defaults.*\blogfile=)[-]?.+(\b.*$)/\1$escaped_variable\2/" /etc/sudoers
                fi
            fi

            # Check validity of sudoers and cleanup bak
            if /usr/sbin/visudo -qcf /etc/sudoers; then
                rm -f /etc/sudoers.bak
            else
                echo "Fail to validate remediated /etc/sudoers, reverting to original file."
                mv /etc/sudoers.bak /etc/sudoers
                false
            fi
        else
            echo "Skipping remediation, /etc/sudoers failed to validate"
            false
        fi

        else
            >&2 echo 'Remediation is not applicable, nothing was done'
        fi

        ---
    '8':
      references:
        cce:
          - CCE-83601-5
        disa_stig:
          - N/A
      check:
        - N/A
      fix: |
        [source,bash]
        ---
        # Remediation is applicable only in certain platforms
        if rpm --quiet -q sudo; then

        var_sudo_logfile=''


        if /usr/sbin/visudo -qcf /etc/sudoers; then
            cp /etc/sudoers /etc/sudoers.bak
            if ! grep -P '^[\s]*Defaults[\s]*\blogfile\s*=\s*(?:"?([^",\s]+)"?)\b.*$' /etc/sudoers; then
                # sudoers file doesn't define Option logfile
                echo "Defaults logfile=${var_sudo_logfile}" >> /etc/sudoers
            else
                # sudoers file defines Option logfile, remediate if appropriate value is not set
                if ! grep -P "^[\s]*Defaults.*\blogfile=${var_sudo_logfile}\b.*$" /etc/sudoers; then

                    escaped_variable=${var_sudo_logfile//$'/'/$'\/'}
                    sed -Ei "s/(^[\s]*Defaults.*\blogfile=)[-]?.+(\b.*$)/\1$escaped_variable\2/" /etc/sudoers
                fi
            fi

            # Check validity of sudoers and cleanup bak
            if /usr/sbin/visudo -qcf /etc/sudoers; then
                rm -f /etc/sudoers.bak
            else
                echo "Fail to validate remediated /etc/sudoers, reverting to original file."
                mv /etc/sudoers.bak /etc/sudoers
                false
            fi
        else
            echo "Skipping remediation, /etc/sudoers failed to validate"
            false
        fi

        else
            >&2 echo 'Remediation is not applicable, nothing was done'
        fi

        ---
    '9':
      references:
        cce:
          - CCE-83527-2
        disa_stig:
          - N/A
      check:
        - N/A
      fix: |
        [source,bash]
        ---
        # Remediation is applicable only in certain platforms
        if rpm --quiet -q sudo; then

        var_sudo_logfile=''


        if /usr/sbin/visudo -qcf /etc/sudoers; then
            cp /etc/sudoers /etc/sudoers.bak
            if ! grep -P '^[\s]*Defaults[\s]*\blogfile\s*=\s*(?:"?([^",\s]+)"?)\b.*$' /etc/sudoers; then
                # sudoers file doesn't define Option logfile
                echo "Defaults logfile=${var_sudo_logfile}" >> /etc/sudoers
            else
                # sudoers file defines Option logfile, remediate if appropriate value is not set
                if ! grep -P "^[\s]*Defaults.*\blogfile=${var_sudo_logfile}\b.*$" /etc/sudoers; then

                    escaped_variable=${var_sudo_logfile//$'/'/$'\/'}
                    sed -Ei "s/(^[\s]*Defaults.*\blogfile=)[-]?.+(\b.*$)/\1$escaped_variable\2/" /etc/sudoers
                fi
            fi

            # Check validity of sudoers and cleanup bak
            if /usr/sbin/visudo -qcf /etc/sudoers; then
                rm -f /etc/sudoers.bak
            else
                echo "Fail to validate remediated /etc/sudoers, reverting to original file."
                mv /etc/sudoers.bak /etc/sudoers
                false
            fi
        else
            echo "Skipping remediation, /etc/sudoers failed to validate"
            false
        fi

        else
            >&2 echo 'Remediation is not applicable, nothing was done'
        fi

        ---
  ubuntu:
    '2004':
      references:
        cce:
          - N/A
        disa_stig:
          - N/A
      check:
        - N/A
      fix: |
        [source,bash]
        ---
        # Remediation is applicable only in certain platforms
        if dpkg-query --show --showformat='${db:Status-Status}\n' 'sudo' 2>/dev/null | grep -q '^installed'; then

        var_sudo_logfile=''


        if /usr/sbin/visudo -qcf /etc/sudoers; then
            cp /etc/sudoers /etc/sudoers.bak
            if ! grep -P '^[\s]*Defaults[\s]*\blogfile\s*=\s*(?:"?([^",\s]+)"?)\b.*$' /etc/sudoers; then
                # sudoers file doesn't define Option logfile
                echo "Defaults logfile=${var_sudo_logfile}" >> /etc/sudoers
            else
                # sudoers file defines Option logfile, remediate if appropriate value is not set
                if ! grep -P "^[\s]*Defaults.*\blogfile=${var_sudo_logfile}\b.*$" /etc/sudoers; then

                    escaped_variable=${var_sudo_logfile//$'/'/$'\/'}
                    sed -Ei "s/(^[\s]*Defaults.*\blogfile=)[-]?.+(\b.*$)/\1$escaped_variable\2/" /etc/sudoers
                fi
            fi

            # Check validity of sudoers and cleanup bak
            if /usr/sbin/visudo -qcf /etc/sudoers; then
                rm -f /etc/sudoers.bak
            else
                echo "Fail to validate remediated /etc/sudoers, reverting to original file."
                mv /etc/sudoers.bak /etc/sudoers
                false
            fi
        else
            echo "Skipping remediation, /etc/sudoers failed to validate"
            false
        fi

        else
            >&2 echo 'Remediation is not applicable, nothing was done'
        fi

        ---
    '2204':
      references:
        cce:
          - N/A
        disa_stig:
          - N/A
      check:
        - N/A
      fix: |
        [source,bash]
        ---
        # Remediation is applicable only in certain platforms
        if dpkg-query --show --showformat='${db:Status-Status}\n' 'sudo' 2>/dev/null | grep -q '^installed'; then

        var_sudo_logfile=''


        if /usr/sbin/visudo -qcf /etc/sudoers; then
            cp /etc/sudoers /etc/sudoers.bak
            if ! grep -P '^[\s]*Defaults[\s]*\blogfile\s*=\s*(?:"?([^",\s]+)"?)\b.*$' /etc/sudoers; then
                # sudoers file doesn't define Option logfile
                echo "Defaults logfile=${var_sudo_logfile}" >> /etc/sudoers
            else
                # sudoers file defines Option logfile, remediate if appropriate value is not set
                if ! grep -P "^[\s]*Defaults.*\blogfile=${var_sudo_logfile}\b.*$" /etc/sudoers; then

                    escaped_variable=${var_sudo_logfile//$'/'/$'\/'}
                    sed -Ei "s/(^[\s]*Defaults.*\blogfile=)[-]?.+(\b.*$)/\1$escaped_variable\2/" /etc/sudoers
                fi
            fi

            # Check validity of sudoers and cleanup bak
            if /usr/sbin/visudo -qcf /etc/sudoers; then
                rm -f /etc/sudoers.bak
            else
                echo "Fail to validate remediated /etc/sudoers, reverting to original file."
                mv /etc/sudoers.bak /etc/sudoers
                false
            fi
        else
            echo "Skipping remediation, /etc/sudoers failed to validate"
            false
        fi

        else
            >&2 echo 'Remediation is not applicable, nothing was done'
        fi

        ---
    '2404':
      references:
        cce:
          - N/A
        disa_stig:
          - N/A
      check:
        - N/A
      fix: |
        [source,bash]
        ---
        # Remediation is applicable only in certain platforms
        if dpkg-query --show --showformat='${db:Status-Status}\n' 'sudo' 2>/dev/null | grep -q '^installed'; then

        var_sudo_logfile=''


        if /usr/sbin/visudo -qcf /etc/sudoers; then
            cp /etc/sudoers /etc/sudoers.bak
            if ! grep -P '^[\s]*Defaults[\s]*\blogfile\s*=\s*(?:"?([^",\s]+)"?)\b.*$' /etc/sudoers; then
                # sudoers file doesn't define Option logfile
                echo "Defaults logfile=${var_sudo_logfile}" >> /etc/sudoers
            else
                # sudoers file defines Option logfile, remediate if appropriate value is not set
                if ! grep -P "^[\s]*Defaults.*\blogfile=${var_sudo_logfile}\b.*$" /etc/sudoers; then

                    escaped_variable=${var_sudo_logfile//$'/'/$'\/'}
                    sed -Ei "s/(^[\s]*Defaults.*\blogfile=)[-]?.+(\b.*$)/\1$escaped_variable\2/" /etc/sudoers
                fi
            fi

            # Check validity of sudoers and cleanup bak
            if /usr/sbin/visudo -qcf /etc/sudoers; then
                rm -f /etc/sudoers.bak
            else
                echo "Fail to validate remediated /etc/sudoers, reverting to original file."
                mv /etc/sudoers.bak /etc/sudoers
                false
            fi
        else
            echo "Skipping remediation, /etc/sudoers failed to validate"
            false
        fi

        else
            >&2 echo 'Remediation is not applicable, nothing was done'
        fi

        ---
