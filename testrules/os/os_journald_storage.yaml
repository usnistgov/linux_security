id: os_journald_storage
title: Ensure journald is configured to write log files to persistent disk
discussion: Log files contain valuable data and need to be persistent to aid in possible
  investigations.
check: $OS_VALUE
result:
  integer: 1
fix: $OS_VALUE
references:
  cce:
    - $OS_VALUE
  cci:
    - N/A
  800-53r4:
    - N/A
  srg:
    - N/A
  disa_stig:
    - $OS_VALUE
  cis:
    benchmark:
      - $OS_VALUE
tags:
  - cis_lvl1
  - cis_lvl2
  - client
  - server
severity: medium
os_specifics:
  rhel:
    '10':
      references:
        cce:
          - CCE-90077-9
        disa_stig:
          - N/A
      check:
        - N/A
      fix: |
        [source,bash]
        ---
        # Remediation is applicable only in certain platforms
        if rpm --quiet -q kernel; then

        found=false

        # set value in all files if they contain section or key
        for f in $(echo -n "/etc/systemd/journald.conf.d/complianceascode_hardening.conf /etc/systemd/journald.conf.d/*.conf /etc/systemd/journald.conf"); do
            if [ ! -e "$f" ]; then
                continue
            fi

            # find key in section and change value
            if grep -qzosP "[[:space:]]*\[Journal\]([^\n\[]*\n+)+?[[:space:]]*Storage" "$f"; then

                    sed -i "s/Storage[^(\n)]*/Storage=persistent/" "$f"

                    found=true

            # find section and add key = value to it
            elif grep -qs "[[:space:]]*\[Journal\]" "$f"; then

                    sed -i "/[[:space:]]*\[Journal\]/a Storage=persistent" "$f"

                    found=true
            fi
        done

        # if section not in any file, append section with key = value to FIRST file in files parameter
        if ! $found ; then
            file=$(echo "/etc/systemd/journald.conf.d/complianceascode_hardening.conf /etc/systemd/journald.conf.d/*.conf /etc/systemd/journald.conf" | cut -f1 -d ' ')
            mkdir -p "$(dirname "$file")"

            echo -e "[Journal]\nStorage=persistent" >> "$file"

        fi

        else
            >&2 echo 'Remediation is not applicable, nothing was done'
        fi

        ---
    '8':
      references:
        cce:
          - CCE-86045-2
        disa_stig:
          - N/A
      check:
        - N/A
      fix: |
        [source,bash]
        ---
        # Remediation is applicable only in certain platforms
        if rpm --quiet -q kernel; then

        found=false

        # set value in all files if they contain section or key
        for f in $(echo -n "/etc/systemd/journald.conf.d/complianceascode_hardening.conf /etc/systemd/journald.conf.d/*.conf /etc/systemd/journald.conf"); do
            if [ ! -e "$f" ]; then
                continue
            fi

            # find key in section and change value
            if grep -qzosP "[[:space:]]*\[Journal\]([^\n\[]*\n+)+?[[:space:]]*Storage" "$f"; then

                    sed -i "s/Storage[^(\n)]*/Storage=persistent/" "$f"

                    found=true

            # find section and add key = value to it
            elif grep -qs "[[:space:]]*\[Journal\]" "$f"; then

                    sed -i "/[[:space:]]*\[Journal\]/a Storage=persistent" "$f"

                    found=true
            fi
        done

        # if section not in any file, append section with key = value to FIRST file in files parameter
        if ! $found ; then
            file=$(echo "/etc/systemd/journald.conf.d/complianceascode_hardening.conf /etc/systemd/journald.conf.d/*.conf /etc/systemd/journald.conf" | cut -f1 -d ' ')
            mkdir -p "$(dirname "$file")"

            echo -e "[Journal]\nStorage=persistent" >> "$file"

        fi

        else
            >&2 echo 'Remediation is not applicable, nothing was done'
        fi

        ---
    '9':
      references:
        cce:
          - CCE-86046-0
        disa_stig:
          - N/A
      check:
        - N/A
      fix: |
        [source,bash]
        ---
        # Remediation is applicable only in certain platforms
        if rpm --quiet -q kernel; then

        found=false

        # set value in all files if they contain section or key
        for f in $(echo -n "/etc/systemd/journald.conf.d/complianceascode_hardening.conf /etc/systemd/journald.conf.d/*.conf /etc/systemd/journald.conf"); do
            if [ ! -e "$f" ]; then
                continue
            fi

            # find key in section and change value
            if grep -qzosP "[[:space:]]*\[Journal\]([^\n\[]*\n+)+?[[:space:]]*Storage" "$f"; then

                    sed -i "s/Storage[^(\n)]*/Storage=persistent/" "$f"

                    found=true

            # find section and add key = value to it
            elif grep -qs "[[:space:]]*\[Journal\]" "$f"; then

                    sed -i "/[[:space:]]*\[Journal\]/a Storage=persistent" "$f"

                    found=true
            fi
        done

        # if section not in any file, append section with key = value to FIRST file in files parameter
        if ! $found ; then
            file=$(echo "/etc/systemd/journald.conf.d/complianceascode_hardening.conf /etc/systemd/journald.conf.d/*.conf /etc/systemd/journald.conf" | cut -f1 -d ' ')
            mkdir -p "$(dirname "$file")"

            echo -e "[Journal]\nStorage=persistent" >> "$file"

        fi

        else
            >&2 echo 'Remediation is not applicable, nothing was done'
        fi

        ---
  ubuntu:
    '2004':
      references:
        cce:
          - N/A
        disa_stig:
          - N/A
      check:
        - N/A
      fix: |
        [source,bash]
        ---
        # Remediation is applicable only in certain platforms
        if dpkg-query --show --showformat='${db:Status-Status}
        ' 'linux-base' 2>/dev/null | grep -q ^installed; then

        if [ -e "/etc/systemd/journald.conf" ] ; then

            LC_ALL=C sed -i "/^\s*Storage\s*=\s*/d" "/etc/systemd/journald.conf"
        else
            touch "/etc/systemd/journald.conf"
        fi
        # make sure file has newline at the end
        sed -i -e '$a\' "/etc/systemd/journald.conf"

        cp "/etc/systemd/journald.conf" "/etc/systemd/journald.conf.bak"
        # Insert before the line matching the regex '^#\s*Storage'.
        line_number="$(LC_ALL=C grep -n "^#\s*Storage" "/etc/systemd/journald.conf.bak" | LC_ALL=C sed 's/:.*//g')"
        if [ -z "$line_number" ]; then
            # There was no match of '^#\s*Storage', insert at
            # the end of the file.
            printf '%s\n' "Storage=persistent" >> "/etc/systemd/journald.conf"
        else
            head -n "$(( line_number - 1 ))" "/etc/systemd/journald.conf.bak" > "/etc/systemd/journald.conf"
            printf '%s\n' "Storage=persistent" >> "/etc/systemd/journald.conf"
            tail -n "+$(( line_number ))" "/etc/systemd/journald.conf.bak" >> "/etc/systemd/journald.conf"
        fi
        # Clean up after ourselves.
        rm "/etc/systemd/journald.conf.bak"

        else
            >&2 echo 'Remediation is not applicable, nothing was done'
        fi

        ---
    '2204':
      references:
        cce:
          - N/A
        disa_stig:
          - N/A
      check:
        - N/A
      fix: |
        [source,bash]
        ---
        # Remediation is applicable only in certain platforms
        if dpkg-query --show --showformat='${db:Status-Status}
        ' 'linux-base' 2>/dev/null | grep -q ^installed; then

        if [ -e "/etc/systemd/journald.conf" ] ; then

            LC_ALL=C sed -i "/^\s*Storage\s*=\s*/d" "/etc/systemd/journald.conf"
        else
            touch "/etc/systemd/journald.conf"
        fi
        # make sure file has newline at the end
        sed -i -e '$a\' "/etc/systemd/journald.conf"

        cp "/etc/systemd/journald.conf" "/etc/systemd/journald.conf.bak"
        # Insert before the line matching the regex '^#\s*Storage'.
        line_number="$(LC_ALL=C grep -n "^#\s*Storage" "/etc/systemd/journald.conf.bak" | LC_ALL=C sed 's/:.*//g')"
        if [ -z "$line_number" ]; then
            # There was no match of '^#\s*Storage', insert at
            # the end of the file.
            printf '%s\n' "Storage=persistent" >> "/etc/systemd/journald.conf"
        else
            head -n "$(( line_number - 1 ))" "/etc/systemd/journald.conf.bak" > "/etc/systemd/journald.conf"
            printf '%s\n' "Storage=persistent" >> "/etc/systemd/journald.conf"
            tail -n "+$(( line_number ))" "/etc/systemd/journald.conf.bak" >> "/etc/systemd/journald.conf"
        fi
        # Clean up after ourselves.
        rm "/etc/systemd/journald.conf.bak"

        else
            >&2 echo 'Remediation is not applicable, nothing was done'
        fi

        ---
    '2404':
      references:
        cce:
          - N/A
        disa_stig:
          - N/A
      check:
        - N/A
      fix: |
        [source,bash]
        ---
        # Remediation is applicable only in certain platforms
        if dpkg-query --show --showformat='${db:Status-Status}
        ' 'linux-base' 2>/dev/null | grep -q ^installed; then

        if [ -e "/etc/systemd/journald.conf" ] ; then

            LC_ALL=C sed -i "/^\s*Storage\s*=\s*/d" "/etc/systemd/journald.conf"
        else
            touch "/etc/systemd/journald.conf"
        fi
        # make sure file has newline at the end
        sed -i -e '$a\' "/etc/systemd/journald.conf"

        cp "/etc/systemd/journald.conf" "/etc/systemd/journald.conf.bak"
        # Insert before the line matching the regex '^#\s*Storage'.
        line_number="$(LC_ALL=C grep -n "^#\s*Storage" "/etc/systemd/journald.conf.bak" | LC_ALL=C sed 's/:.*//g')"
        if [ -z "$line_number" ]; then
            # There was no match of '^#\s*Storage', insert at
            # the end of the file.
            printf '%s\n' "Storage=persistent" >> "/etc/systemd/journald.conf"
        else
            head -n "$(( line_number - 1 ))" "/etc/systemd/journald.conf.bak" > "/etc/systemd/journald.conf"
            printf '%s\n' "Storage=persistent" >> "/etc/systemd/journald.conf"
            tail -n "+$(( line_number ))" "/etc/systemd/journald.conf.bak" >> "/etc/systemd/journald.conf"
        fi
        # Clean up after ourselves.
        rm "/etc/systemd/journald.conf.bak"

        else
            >&2 echo 'Remediation is not applicable, nothing was done'
        fi

        ---
