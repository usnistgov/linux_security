id: networking_set_nftables_base_chain
title: Ensure Base Chains Exist for Nftables
discussion: |
  If a base chain doesn't exist with a hook for input, forward, and delete, packets that would
  flow through those chains will not be touched by nftables.
check: $OS_VALUE
result:
  integer: 1
fix: $OS_VALUE
references:
  cce:
    - $OS_VALUE
  cci:
    - N/A
  800-53r4:
    - N/A
  srg:
    - N/A
  disa_stig:
    - $OS_VALUE
  cis:
    benchmark:
      - $OS_VALUE
tags:
  - cis_lvl1
  - cis_lvl2
  - client
  - server
severity: medium
os_specifics:
  ubuntu:
    '2004':
      references:
        cce:
          - N/A
        disa_stig:
          - N/A
      check:
        - N/A
      fix: |
        [source,bash]
        ---
        # Remediation is applicable only in certain platforms
        if dpkg-query --show --showformat='${db:Status-Status}\n' 'nftables' 2>/dev/null | grep -q '^installed'; then

        #Name of the table
        var_nftables_table=''

        #Familiy of the table
        var_nftables_family=''

        #Name(s) of base chain
        var_nftables_base_chain_names=''

        #Type(s) of base chain
        var_nftables_base_chain_types=''

        # Hooks for base chain
        var_nftables_base_chain_hooks=''

        #Priority
        var_nftables_base_chain_priorities=''

        #Policy
        var_nftables_base_chain_policies=''


        #Transfer some of strings to arrays
        IFS="," read -r -a  names <<< "$var_nftables_base_chain_names"
        IFS="," read -r -a  types <<< "$var_nftables_base_chain_types"
        IFS="," read -r -a  hooks <<< "$var_nftables_base_chain_hooks"
        IFS="," read -r -a  priorities <<< "$var_nftables_base_chain_priorities"
        IFS="," read -r -a  policies <<< "$var_nftables_base_chain_policies"

        my_cmd="nft list tables | grep '$var_nftables_family $var_nftables_table'"
        eval IS_TABLE_EXIST=\$\($my_cmd\)
        if [ -z "$IS_TABLE_EXIST" ]
        then
          # We create a table and add chains to it
          nft create table "$var_nftables_family" "$var_nftables_table"
          num_of_chains=${#names[@]}
          for ((i=0; i < num_of_chains; i++))
          do
           chain_to_add="add chain $var_nftables_family $var_nftables_table ${names[$i]} { type ${types[$i]} hook ${hooks[$i]} priority ${priorities[$i]} ; policy ${policies[$i]} ; }"
           my_cmd="nft '$chain_to_add'"
           eval $my_cmd
          done
        else
          # We add missing chains to the existing table
          num_of_chains=${#names[@]}
          for ((i=0; i < num_of_chains; i++))
          do
            IS_CHAIN_EXIST=$(nft list table "$var_nftables_family" "$var_nftables_table" | grep "hook ${hooks[$i]}")
            if [ -z "$IS_CHAIN_EXIST" ]
              then
                chain_to_add="add chain '$var_nftables_family' '$var_nftables_table' ${names[$i]} { type ${types[$i]} hook ${hooks[$i]} priority ${priorities[$i]} ; policy ${policies[$i]} ; }"
                my_cmd="nft '$chain_to_add'"
                eval $my_cmd
            fi
          done
        fi

        else
            >&2 echo 'Remediation is not applicable, nothing was done'
        fi

        ---
    '2204':
      references:
        cce:
          - N/A
        disa_stig:
          - N/A
      check:
        - N/A
      fix: |
        [source,bash]
        ---
        # Remediation is applicable only in certain platforms
        if dpkg-query --show --showformat='${db:Status-Status}\n' 'nftables' 2>/dev/null | grep -q '^installed'; then

        #Name of the table
        var_nftables_table=''

        #Familiy of the table
        var_nftables_family=''

        #Name(s) of base chain
        var_nftables_base_chain_names=''

        #Type(s) of base chain
        var_nftables_base_chain_types=''

        # Hooks for base chain
        var_nftables_base_chain_hooks=''

        #Priority
        var_nftables_base_chain_priorities=''

        #Policy
        var_nftables_base_chain_policies=''


        #Transfer some of strings to arrays
        IFS="," read -r -a  names <<< "$var_nftables_base_chain_names"
        IFS="," read -r -a  types <<< "$var_nftables_base_chain_types"
        IFS="," read -r -a  hooks <<< "$var_nftables_base_chain_hooks"
        IFS="," read -r -a  priorities <<< "$var_nftables_base_chain_priorities"
        IFS="," read -r -a  policies <<< "$var_nftables_base_chain_policies"

        my_cmd="nft list tables | grep '$var_nftables_family $var_nftables_table'"
        eval IS_TABLE_EXIST=\$\($my_cmd\)
        if [ -z "$IS_TABLE_EXIST" ]
        then
          # We create a table and add chains to it
          nft create table "$var_nftables_family" "$var_nftables_table"
          num_of_chains=${#names[@]}
          for ((i=0; i < num_of_chains; i++))
          do
           chain_to_add="add chain $var_nftables_family $var_nftables_table ${names[$i]} { type ${types[$i]} hook ${hooks[$i]} priority ${priorities[$i]} ; policy ${policies[$i]} ; }"
           my_cmd="nft '$chain_to_add'"
           eval $my_cmd
          done
        else
          # We add missing chains to the existing table
          num_of_chains=${#names[@]}
          for ((i=0; i < num_of_chains; i++))
          do
            IS_CHAIN_EXIST=$(nft list table "$var_nftables_family" "$var_nftables_table" | grep "hook ${hooks[$i]}")
            if [ -z "$IS_CHAIN_EXIST" ]
              then
                chain_to_add="add chain '$var_nftables_family' '$var_nftables_table' ${names[$i]} { type ${types[$i]} hook ${hooks[$i]} priority ${priorities[$i]} ; policy ${policies[$i]} ; }"
                my_cmd="nft '$chain_to_add'"
                eval $my_cmd
            fi
          done
        fi

        else
            >&2 echo 'Remediation is not applicable, nothing was done'
        fi

        ---
    '2404':
      references:
        cce:
          - N/A
        disa_stig:
          - N/A
      check:
        - N/A
      fix: |
        [source,bash]
        ---
        # Remediation is applicable only in certain platforms
        if dpkg-query --show --showformat='${db:Status-Status}\n' 'nftables' 2>/dev/null | grep -q '^installed'; then

        #Name of the table
        var_nftables_table=''

        #Familiy of the table
        var_nftables_family=''

        #Name(s) of base chain
        var_nftables_base_chain_names=''

        #Type(s) of base chain
        var_nftables_base_chain_types=''

        # Hooks for base chain
        var_nftables_base_chain_hooks=''

        #Priority
        var_nftables_base_chain_priorities=''

        #Policy
        var_nftables_base_chain_policies=''


        #Transfer some of strings to arrays
        IFS="," read -r -a  names <<< "$var_nftables_base_chain_names"
        IFS="," read -r -a  types <<< "$var_nftables_base_chain_types"
        IFS="," read -r -a  hooks <<< "$var_nftables_base_chain_hooks"
        IFS="," read -r -a  priorities <<< "$var_nftables_base_chain_priorities"
        IFS="," read -r -a  policies <<< "$var_nftables_base_chain_policies"

        my_cmd="nft list tables | grep '$var_nftables_family $var_nftables_table'"
        eval IS_TABLE_EXIST=\$\($my_cmd\)
        if [ -z "$IS_TABLE_EXIST" ]
        then
          # We create a table and add chains to it
          nft create table "$var_nftables_family" "$var_nftables_table"
          num_of_chains=${#names[@]}
          for ((i=0; i < num_of_chains; i++))
          do
           chain_to_add="add chain $var_nftables_family $var_nftables_table ${names[$i]} { type ${types[$i]} hook ${hooks[$i]} priority ${priorities[$i]} ; policy ${policies[$i]} ; }"
           my_cmd="nft '$chain_to_add'"
           eval $my_cmd
          done
        else
          # We add missing chains to the existing table
          num_of_chains=${#names[@]}
          for ((i=0; i < num_of_chains; i++))
          do
            IS_CHAIN_EXIST=$(nft list table "$var_nftables_family" "$var_nftables_table" | grep "hook ${hooks[$i]}")
            if [ -z "$IS_CHAIN_EXIST" ]
              then
                chain_to_add="add chain '$var_nftables_family' '$var_nftables_table' ${names[$i]} { type ${types[$i]} hook ${hooks[$i]} priority ${priorities[$i]} ; policy ${policies[$i]} ; }"
                my_cmd="nft '$chain_to_add'"
                eval $my_cmd
            fi
          done
        fi

        else
            >&2 echo 'Remediation is not applicable, nothing was done'
        fi

        ---
