id: networking_set_nftables_loopback_traffic
title: Set nftables Configuration for Loopback Traffic
discussion: |
  Loopback traffic is generated between processes on machine and is
  typically critical to operation of the system. The loopback interface
  is the only place that loopback network traffic should be seen,
  all other interfaces should ignore traffic on this network as an
  anti-spoofing measure.
check: $OS_VALUE
result:
  integer: 1
fix: $OS_VALUE
references:
  cce:
    - $OS_VALUE
  cci:
    - N/A
  800-53r4:
    - N/A
  srg:
    - N/A
  disa_stig:
    - $OS_VALUE
  cis:
    benchmark:
      - $OS_VALUE
tags:
  - cis_lvl1
  - cis_lvl2
  - client
  - server
severity: medium
os_specifics:
  ubuntu:
    '2004':
      references:
        cce:
          - N/A
        disa_stig:
          - N/A
      check:
        - N/A
      fix: |
        [source,bash]
        ---
        # Remediation is applicable only in certain platforms
        if ( dpkg-query --show --showformat='${db:Status-Status}\n' 'nftables' 2>/dev/null | grep -q '^installed' ); then

        var_nftables_family=''



        grubfile="/boot/grub/grub.cfg"

        # Implement the loopback rules:
        nft add rule inet filter input iif lo accept
        nft add rule inet filter input ip saddr 127.0.0.0/8 counter drop

        # Check IPv6 is disabled, if false implement IPv6 loopback rules
        disabled="false"
        [ -f "$grubfile" ] && ! grep "^\s*linux" "$grubfile" | grep -vq "ipv6.disable=1" && disabled="true"

        grep -Eq "^\s*net\.ipv6\.conf\.all\.disable_ipv6\s*=\s*1\b(\s+#.*)?$" \
        /etc/sysctl.conf /etc/sysctl.d/*.conf && \
        grep -Eq "^\s*net\.ipv6\.conf\.default\.disable_ipv6\s*=\s*1\b(\s+#.*)?$" \
        /etc/sysctl.conf /etc/sysctl.d/*.conf && sysctl net.ipv6.conf.all.disable_ipv6 | \
        grep -Eq "^\s*net\.ipv6\.conf\.all\.disable_ipv6\s*=\s*1\b(\s+#.*)?$" && \
        sysctl net.ipv6.conf.default.disable_ipv6 | \
        grep -Eq "^\s*net\.ipv6\.conf\.default\.disable_ipv6\s*=\s*1\b(\s+#.*)?$" && disabled="true"

        # Is IPv6 Disabled? (true/false)
        if [ "$disabled" = false ] ; then
            nft add rule inet filter input ip6 saddr ::1 counter drop
        fi


        nft list ruleset > "/etc/${var_nftables_family}-filter.rules"

        else
            >&2 echo 'Remediation is not applicable, nothing was done'
        fi

        ---
    '2204':
      references:
        cce:
          - N/A
        disa_stig:
          - N/A
      check:
        - N/A
      fix: |
        [source,bash]
        ---
        # Remediation is applicable only in certain platforms
        if ( dpkg-query --show --showformat='${db:Status-Status}\n' 'nftables' 2>/dev/null | grep -q '^installed' ); then

        var_nftables_family=''



        grubfile="/boot/grub/grub.cfg"

        # Implement the loopback rules:
        nft add rule inet filter input iif lo accept
        nft add rule inet filter input ip saddr 127.0.0.0/8 counter drop

        # Check IPv6 is disabled, if false implement IPv6 loopback rules
        disabled="false"
        [ -f "$grubfile" ] && ! grep "^\s*linux" "$grubfile" | grep -vq "ipv6.disable=1" && disabled="true"

        grep -Eq "^\s*net\.ipv6\.conf\.all\.disable_ipv6\s*=\s*1\b(\s+#.*)?$" \
        /etc/sysctl.conf /etc/sysctl.d/*.conf && \
        grep -Eq "^\s*net\.ipv6\.conf\.default\.disable_ipv6\s*=\s*1\b(\s+#.*)?$" \
        /etc/sysctl.conf /etc/sysctl.d/*.conf && sysctl net.ipv6.conf.all.disable_ipv6 | \
        grep -Eq "^\s*net\.ipv6\.conf\.all\.disable_ipv6\s*=\s*1\b(\s+#.*)?$" && \
        sysctl net.ipv6.conf.default.disable_ipv6 | \
        grep -Eq "^\s*net\.ipv6\.conf\.default\.disable_ipv6\s*=\s*1\b(\s+#.*)?$" && disabled="true"

        # Is IPv6 Disabled? (true/false)
        if [ "$disabled" = false ] ; then
            nft add rule inet filter input ip6 saddr ::1 counter drop
        fi


        nft list ruleset > "/etc/${var_nftables_family}-filter.rules"

        else
            >&2 echo 'Remediation is not applicable, nothing was done'
        fi

        ---
    '2404':
      references:
        cce:
          - N/A
        disa_stig:
          - N/A
      check:
        - N/A
      fix: |
        [source,bash]
        ---
        # Remediation is applicable only in certain platforms
        if ( dpkg-query --show --showformat='${db:Status-Status}\n' 'nftables' 2>/dev/null | grep -q '^installed' ); then

        var_nftables_family=''



        grubfile="/boot/grub/grub.cfg"

        # Implement the loopback rules:
        nft add rule inet filter input iif lo accept
        nft add rule inet filter input ip saddr 127.0.0.0/8 counter drop

        # Check IPv6 is disabled, if false implement IPv6 loopback rules
        disabled="false"
        [ -f "$grubfile" ] && ! grep "^\s*linux" "$grubfile" | grep -vq "ipv6.disable=1" && disabled="true"

        grep -Eq "^\s*net\.ipv6\.conf\.all\.disable_ipv6\s*=\s*1\b(\s+#.*)?$" \
        /etc/sysctl.conf /etc/sysctl.d/*.conf && \
        grep -Eq "^\s*net\.ipv6\.conf\.default\.disable_ipv6\s*=\s*1\b(\s+#.*)?$" \
        /etc/sysctl.conf /etc/sysctl.d/*.conf && sysctl net.ipv6.conf.all.disable_ipv6 | \
        grep -Eq "^\s*net\.ipv6\.conf\.all\.disable_ipv6\s*=\s*1\b(\s+#.*)?$" && \
        sysctl net.ipv6.conf.default.disable_ipv6 | \
        grep -Eq "^\s*net\.ipv6\.conf\.default\.disable_ipv6\s*=\s*1\b(\s+#.*)?$" && disabled="true"

        # Is IPv6 Disabled? (true/false)
        if [ "$disabled" = false ] ; then
            nft add rule inet filter input ip6 saddr ::1 counter drop
        fi


        nft list ruleset > "/etc/${var_nftables_family}-filter.rules"

        else
            >&2 echo 'Remediation is not applicable, nothing was done'
        fi

        ---
