id: audit_grub2_audit_backlog_limit_argument
title: Extend Audit Backlog Limit for the Audit Daemon
discussion: |
  audit_backlog_limit sets the queue length for audit events awaiting transfer
  to the audit daemon. Until the audit daemon is up and running, all log messages
  are stored in this queue.  If the queue is overrun during boot process, the action
  defined by audit failure flag is taken.
check: $OS_VALUE
result:
  integer: 1
fix: $OS_VALUE
references:
  cce:
    - $OS_VALUE
  cci:
    - CCI-001464
    - CCI-001849
  800-53r4:
    - CM-6(a)
  srg:
    - SRG-OS-000037-GPOS-00015
    - SRG-OS-000042-GPOS-00020
    - SRG-OS-000062-GPOS-00031
    - SRG-OS-000254-GPOS-00095
    - SRG-OS-000341-GPOS-00132
    - SRG-OS-000392-GPOS-00172
    - SRG-OS-000462-GPOS-00206
    - SRG-OS-000471-GPOS-00215
  disa_stig:
    - $OS_VALUE
  cis:
    benchmark:
      - $OS_VALUE
tags:
  - cis_lvl2
  - client
  - server
severity: low
os_specifics:
  rhel:
    '10':
      references:
        cce:
          - CCE-88192-0
        disa_stig:
          - N/A
      check:
        - N/A
      fix: |
        [source,bash]
        ---
        # Remediation is applicable only in certain platforms
        if rpm --quiet -q kernel && { rpm --quiet -q grub2-common; }; then

        expected_value="8192"


        if [[ "$OSCAP_BOOTC_BUILD" == "YES" ]] ; then
            KARGS_DIR="/usr/lib/bootc/kargs.d/"
            if grep -q -E "audit_backlog_limit" "$KARGS_DIR/*.toml" ; then
                sed -i -E "s/^(\s*kargs\s*=\s*\[.*)\"audit_backlog_limit=[^\"]*\"(.*]\s*)/\1\"audit_backlog_limit=$expected_value\"\2/" "$KARGS_DIR/*.toml"
            else
                echo "kargs = [\"audit_backlog_limit=$expected_value\"]" >> "$KARGS_DIR/10-audit_backlog_limit.toml"
            fi
        else

            grubby --update-kernel=ALL --args=audit_backlog_limit=8192

        fi

        else
            >&2 echo 'Remediation is not applicable, nothing was done'
        fi

        ---
    '8':
      references:
        cce:
          - CCE-80943-4
        disa_stig:
          - RHEL-08-030602
      check:
        - N/A
      fix: |
        [source,bash]
        ---
        # Remediation is applicable only in certain platforms
        if rpm --quiet -q kernel && { rpm --quiet -q grub2-common; }; then

        expected_value="8192"


        if [[ "$OSCAP_BOOTC_BUILD" == "YES" ]] ; then
            KARGS_DIR="/usr/lib/bootc/kargs.d/"
            if grep -q -E "audit_backlog_limit" "$KARGS_DIR/*.toml" ; then
                sed -i -E "s/^(\s*kargs\s*=\s*\[.*)\"audit_backlog_limit=[^\"]*\"(.*]\s*)/\1\"audit_backlog_limit=$expected_value\"\2/" "$KARGS_DIR/*.toml"
            else
                echo "kargs = [\"audit_backlog_limit=$expected_value\"]" >> "$KARGS_DIR/10-audit_backlog_limit.toml"
            fi
        else

            grubby --update-kernel=ALL --args=audit_backlog_limit=8192 --env=/boot/grub2/grubenv

        fi

        else
            >&2 echo 'Remediation is not applicable, nothing was done'
        fi

        ---
    '9':
      references:
        cce:
          - CCE-83652-8
        disa_stig:
          - RHEL-09-653120
      check:
        - N/A
      fix: |
        [source,bash]
        ---
        # Remediation is applicable only in certain platforms
        if rpm --quiet -q kernel && { rpm --quiet -q grub2-common; }; then

        expected_value="8192"


        if [[ "$OSCAP_BOOTC_BUILD" == "YES" ]] ; then
            KARGS_DIR="/usr/lib/bootc/kargs.d/"
            if grep -q -E "audit_backlog_limit" "$KARGS_DIR/*.toml" ; then
                sed -i -E "s/^(\s*kargs\s*=\s*\[.*)\"audit_backlog_limit=[^\"]*\"(.*]\s*)/\1\"audit_backlog_limit=$expected_value\"\2/" "$KARGS_DIR/*.toml"
            else
                echo "kargs = [\"audit_backlog_limit=$expected_value\"]" >> "$KARGS_DIR/10-audit_backlog_limit.toml"
            fi
        else

            grubby --update-kernel=ALL --args=audit_backlog_limit=8192

        fi

        else
            >&2 echo 'Remediation is not applicable, nothing was done'
        fi

        ---
  ubuntu:
    '2004':
      references:
        cce:
          - N/A
        disa_stig:
          - N/A
      check:
        - N/A
      fix: |
        [source,bash]
        ---
        # Remediation is applicable only in certain platforms
        if dpkg-query --show --showformat='${db:Status-Status}
        ' 'linux-base' 2>/dev/null | grep -q ^installed && { dpkg-query --show --showformat='${db:Status-Status}\n' 'grub2-common' 2>/dev/null | grep -q '^installed'; }; then

        expected_value="8192"


        if [[ "$OSCAP_BOOTC_BUILD" == "YES" ]] ; then
            KARGS_DIR="/usr/lib/bootc/kargs.d/"
            if grep -q -E "audit_backlog_limit" "$KARGS_DIR/*.toml" ; then
                sed -i -E "s/^(\s*kargs\s*=\s*\[.*)\"audit_backlog_limit=[^\"]*\"(.*]\s*)/\1\"audit_backlog_limit=$expected_value\"\2/" "$KARGS_DIR/*.toml"
            else
                echo "kargs = [\"audit_backlog_limit=$expected_value\"]" >> "$KARGS_DIR/10-audit_backlog_limit.toml"
            fi
        else


            # Correct the form of default kernel command line in GRUB
            if grep -q '^\s*GRUB_CMDLINE_LINUX=.*audit_backlog_limit=.*"'  '/etc/default/grub' ; then
                   # modify the GRUB command-line if an audit_backlog_limit= arg already exists
                   sed -i "s/\(^\s*GRUB_CMDLINE_LINUX=\".*\)audit_backlog_limit=[^[:space:]]\+\(.*\"\)/\1audit_backlog_limit=8192\2/"  '/etc/default/grub'
            # Add to already existing GRUB_CMDLINE_LINUX parameters
            elif grep -q '^\s*GRUB_CMDLINE_LINUX='  '/etc/default/grub' ; then
                   # no audit_backlog_limit=arg is present, append it
                   sed -i "s/\(^\s*GRUB_CMDLINE_LINUX=\".*\)\"/\1 audit_backlog_limit=8192\"/"  '/etc/default/grub'
            # Add GRUB_CMDLINE_LINUX parameters line
            else
                   echo "GRUB_CMDLINE_LINUX=\"audit_backlog_limit=8192\"" >> '/etc/default/grub'
            fi
            update-grub

        fi

        else
            >&2 echo 'Remediation is not applicable, nothing was done'
        fi

        ---
    '2204':
      references:
        cce:
          - N/A
        disa_stig:
          - N/A
      check:
        - N/A
      fix: |
        [source,bash]
        ---
        # Remediation is applicable only in certain platforms
        if dpkg-query --show --showformat='${db:Status-Status}
        ' 'linux-base' 2>/dev/null | grep -q ^installed && { dpkg-query --show --showformat='${db:Status-Status}\n' 'grub2-common' 2>/dev/null | grep -q '^installed'; }; then

        expected_value="8192"


        if [[ "$OSCAP_BOOTC_BUILD" == "YES" ]] ; then
            KARGS_DIR="/usr/lib/bootc/kargs.d/"
            if grep -q -E "audit_backlog_limit" "$KARGS_DIR/*.toml" ; then
                sed -i -E "s/^(\s*kargs\s*=\s*\[.*)\"audit_backlog_limit=[^\"]*\"(.*]\s*)/\1\"audit_backlog_limit=$expected_value\"\2/" "$KARGS_DIR/*.toml"
            else
                echo "kargs = [\"audit_backlog_limit=$expected_value\"]" >> "$KARGS_DIR/10-audit_backlog_limit.toml"
            fi
        else


            # Correct the form of default kernel command line in GRUB
            if grep -q '^\s*GRUB_CMDLINE_LINUX=.*audit_backlog_limit=.*"'  '/etc/default/grub' ; then
                   # modify the GRUB command-line if an audit_backlog_limit= arg already exists
                   sed -i "s/\(^\s*GRUB_CMDLINE_LINUX=\".*\)audit_backlog_limit=[^[:space:]]\+\(.*\"\)/\1audit_backlog_limit=8192\2/"  '/etc/default/grub'
            # Add to already existing GRUB_CMDLINE_LINUX parameters
            elif grep -q '^\s*GRUB_CMDLINE_LINUX='  '/etc/default/grub' ; then
                   # no audit_backlog_limit=arg is present, append it
                   sed -i "s/\(^\s*GRUB_CMDLINE_LINUX=\".*\)\"/\1 audit_backlog_limit=8192\"/"  '/etc/default/grub'
            # Add GRUB_CMDLINE_LINUX parameters line
            else
                   echo "GRUB_CMDLINE_LINUX=\"audit_backlog_limit=8192\"" >> '/etc/default/grub'
            fi
            update-grub

        fi

        else
            >&2 echo 'Remediation is not applicable, nothing was done'
        fi

        ---
    '2404':
      references:
        cce:
          - N/A
        disa_stig:
          - N/A
      check:
        - N/A
      fix: |
        [source,bash]
        ---
        # Remediation is applicable only in certain platforms
        if dpkg-query --show --showformat='${db:Status-Status}
        ' 'linux-base' 2>/dev/null | grep -q ^installed && { dpkg-query --show --showformat='${db:Status-Status}\n' 'grub2-common' 2>/dev/null | grep -q '^installed'; }; then

        expected_value="8192"


        if [[ "$OSCAP_BOOTC_BUILD" == "YES" ]] ; then
            KARGS_DIR="/usr/lib/bootc/kargs.d/"
            if grep -q -E "audit_backlog_limit" "$KARGS_DIR/*.toml" ; then
                sed -i -E "s/^(\s*kargs\s*=\s*\[.*)\"audit_backlog_limit=[^\"]*\"(.*]\s*)/\1\"audit_backlog_limit=$expected_value\"\2/" "$KARGS_DIR/*.toml"
            else
                echo "kargs = [\"audit_backlog_limit=$expected_value\"]" >> "$KARGS_DIR/10-audit_backlog_limit.toml"
            fi
        else


            # Correct the form of default kernel command line in GRUB
            if grep -q '^\s*GRUB_CMDLINE_LINUX=.*audit_backlog_limit=.*"'  '/etc/default/grub' ; then
                   # modify the GRUB command-line if an audit_backlog_limit= arg already exists
                   sed -i "s/\(^\s*GRUB_CMDLINE_LINUX=\".*\)audit_backlog_limit=[^[:space:]]\+\(.*\"\)/\1audit_backlog_limit=8192\2/"  '/etc/default/grub'
            # Add to already existing GRUB_CMDLINE_LINUX parameters
            elif grep -q '^\s*GRUB_CMDLINE_LINUX='  '/etc/default/grub' ; then
                   # no audit_backlog_limit=arg is present, append it
                   sed -i "s/\(^\s*GRUB_CMDLINE_LINUX=\".*\)\"/\1 audit_backlog_limit=8192\"/"  '/etc/default/grub'
            # Add GRUB_CMDLINE_LINUX parameters line
            else
                   echo "GRUB_CMDLINE_LINUX=\"audit_backlog_limit=8192\"" >> '/etc/default/grub'
            fi
            update-grub

        fi

        else
            >&2 echo 'Remediation is not applicable, nothing was done'
        fi

        ---
