from dataclasses import dataclass, field
from typing import Optional

from scap.entity_item_rpm_verify_result_type import (
    EntityItemRpmVerifyResultType,
)
from scap.epoch_datatype_2 import EpochDatatype2
from scap.release_datatype_2 import ReleaseDatatype2
from scap.version_datatype_4 import VersionDatatype4

__NAMESPACE__ = (
    "http://oval.mitre.org/XMLSchema/oval-system-characteristics-5#linux"
)


@dataclass
class RpmverifyfileItem:
    """
    This item stores the verification results of the individual files in an rpm
    similar to what is produced by the rpm -V command.

    :ivar name: This is the package name to check.
    :ivar epoch: This is the epoch number of the RPM, this is used as a
        kludge for version-release comparisons where the vendor has done
        some kind of re-numbering or version forking. For a null epoch
        (or '(none)' as returned by rpm) the string '(none)' should be
        used.. This number is not revealed by a normal query of the
        RPM's information -- you must use a formatted rpm query command
        to gather this data from the command line, like so. For an
        already-installed RPM: rpm -q --qf '%{EPOCH}\\n' installed_rpm
        For an RPM file that has not been installed: rpm -qp --qf
        '%{EPOCH}\\n' rpm_file
    :ivar version: This is the version number of the build. In the case
        of an apache rpm named httpd-2.0.40-21.11.4.i686.rpm, this value
        would be 2.0.40.
    :ivar release: This is the release number of the build, changed by
        the vendor/builder.
    :ivar arch: This is the architecture for which the RPM was built,
        like : i386, ppc, sparc, noarch. In the case of an apache rpm
        named httpd-2.0.40-21.11.4.i686.rpm, this value would be i686.
    :ivar filepath: The filepath element specifies the absolute path for
        a file or directory in the specified package.
    :ivar extended_name: This represents the name, epoch, version,
        release, and architecture fields as a single version string. It
        has the form "NAME-EPOCH:VERSION-RELEASE.ARCHITECTURE". Note
        that a null epoch (or '(none)' as returned by rpm) is equivalent
        to '0' and would hence have the form NAME-0:VERSION-
        RELEASE.ARCHITECTURE.
    :ivar size_differs: The size_differs entity aligns with the first
        character ('S' flag) in the character string in the output
        generated by running rpm –V on a specific file.
    :ivar mode_differs: The mode_differs entity aligns with the second
        character ('M' flag) in the character string in the output
        generated by running rpm –V on a specific file.
    :ivar md5_differs: The md5_differs entity aligns with the third
        character ('5' flag) in the character string in the output
        generated by running rpm –V on a specific file.
    :ivar filedigest_differs: The filedigest_differs entity aligns with
        the third character ('5' flag) in the character string in the
        output generated by running rpm –V on a specific file. This
        replaces the md5_differs entity due to naming changes for
        verification and reporting options.
    :ivar device_differs: The device_differs entity aligns with the
        fourth character ('D' flag) in the character string in the
        output generated by running rpm –V on a specific file.
    :ivar link_mismatch: The link_mismatch entity aligns with the fifth
        character ('L' flag) in the character string in the output
        generated by running rpm –V on a specific file.
    :ivar ownership_differs: The ownership_differs entity aligns with
        the sixth character ('U' flag) in the character string in the
        output generated by running rpm –V on a specific file.
    :ivar group_differs: The group_differs entity aligns with the
        seventh character ('U' flag) in the character string in the
        output generated by running rpm –V on a specific file.
    :ivar mtime_differs: The mtime_differs entity aligns with the eighth
        character ('T' flag) in the character string in the output
        generated by running rpm –V on a specific file.
    :ivar capabilities_differ: The size_differs entity aligns with the
        ninth character ('P' flag) in the character string in the output
        generated by running rpm –V on a specific file.
    :ivar configuration_file: The configuration_file entity represents
        the configuration file attribute marker that may be present on a
        file.
    :ivar documentation_file: The documentation_file entity represents
        the documenation file attribute marker that may be present on a
        file.
    :ivar ghost_file: The ghost_file entity represents the ghost file
        attribute marker that may be present on a file.
    :ivar license_file: The license_file entity represents the license
        file attribute marker that may be present on a file.
    :ivar readme_file: The readme_file entity represents the readme file
        attribute marker that may be present on a file.
    """

    class Meta:
        name = "rpmverifyfile_item"
        namespace = "http://oval.mitre.org/XMLSchema/oval-system-characteristics-5#linux"

    name: Optional[str] = field(
        default=None,
        metadata={
            "type": "Element",
            
        },
    )
    epoch: Optional["RpmverifyfileItem.Epoch"] = field(
        default=None,
        metadata={
            "type": "Element",
            
        },
    )
    version: Optional["RpmverifyfileItem.Version"] = field(
        default=None,
        metadata={
            "type": "Element",
            
        },
    )
    release: Optional["RpmverifyfileItem.Release"] = field(
        default=None,
        metadata={
            "type": "Element",
            
        },
    )
    arch: Optional[str] = field(
        default=None,
        metadata={
            "type": "Element",
            
        },
    )
    filepath: Optional[str] = field(
        default=None,
        metadata={
            "type": "Element",
            
        },
    )
    extended_name: Optional[str] = field(
        default=None,
        metadata={
            "type": "Element",
            
        },
    )
    size_differs: Optional[EntityItemRpmVerifyResultType] = field(
        default=None,
        metadata={
            "type": "Element",
            
        },
    )
    mode_differs: Optional[EntityItemRpmVerifyResultType] = field(
        default=None,
        metadata={
            "type": "Element",
            
        },
    )
    md5_differs: Optional[EntityItemRpmVerifyResultType] = field(
        default=None,
        metadata={
            "type": "Element",
            
        },
    )
    filedigest_differs: Optional[EntityItemRpmVerifyResultType] = field(
        default=None,
        metadata={
            "type": "Element",
            
        },
    )
    device_differs: Optional[EntityItemRpmVerifyResultType] = field(
        default=None,
        metadata={
            "type": "Element",
            
        },
    )
    link_mismatch: Optional[EntityItemRpmVerifyResultType] = field(
        default=None,
        metadata={
            "type": "Element",
            
        },
    )
    ownership_differs: Optional[EntityItemRpmVerifyResultType] = field(
        default=None,
        metadata={
            "type": "Element",
            
        },
    )
    group_differs: Optional[EntityItemRpmVerifyResultType] = field(
        default=None,
        metadata={
            "type": "Element",
            
        },
    )
    mtime_differs: Optional[EntityItemRpmVerifyResultType] = field(
        default=None,
        metadata={
            "type": "Element",
            
        },
    )
    capabilities_differ: Optional[EntityItemRpmVerifyResultType] = field(
        default=None,
        metadata={
            "type": "Element",
            
        },
    )
    configuration_file: Optional[str] = field(
        default=None,
        metadata={
            "type": "Element",
            
        },
    )
    documentation_file: Optional[str] = field(
        default=None,
        metadata={
            "type": "Element",
            
        },
    )
    ghost_file: Optional[str] = field(
        default=None,
        metadata={
            "type": "Element",
            
        },
    )
    license_file: Optional[str] = field(
        default=None,
        metadata={
            "type": "Element",
            
        },
    )
    readme_file: Optional[str] = field(
        default=None,
        metadata={
            "type": "Element",
            
        },
    )

    @dataclass
    class Epoch:
        datatype: EpochDatatype2 = field(
            default=EpochDatatype2.STRING,
            metadata={
                "type": "Attribute",
            },
        )

    @dataclass
    class Version:
        datatype: VersionDatatype4 = field(
            default=VersionDatatype4.STRING,
            metadata={
                "type": "Attribute",
            },
        )

    @dataclass
    class Release:
        datatype: ReleaseDatatype2 = field(
            default=ReleaseDatatype2.STRING,
            metadata={
                "type": "Attribute",
            },
        )
